{
  "api/NF.UnityLibs.Managers.AssetBundleManagement.AssetBundleManager.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.AssetBundleManager.html",
    "title": "Class AssetBundleManager | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class AssetBundleManager Namespace NF.UnityLibs.Managers.AssetBundleManagement [Serializable] public class AssetBundleManager Inheritance object AssetBundleManager Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() InitAsync(string, string) public virtual Task<Exception?> InitAsync(string deviceBaseDirFpath, string manifestName) Parameters deviceBaseDirFpath string manifestName string Returns Task<Exception> RentBundleOrNull<T>(string) public virtual TaskBundle<T>? RentBundleOrNull<T>(string assetBundleName) where T : UnityEngine.Object Parameters assetBundleName string Returns TaskBundle<T> Type Parameters T RentBundleSceneOrNull(string) public virtual TaskBundleScene? RentBundleSceneOrNull(string assetBundleName) Parameters assetBundleName string Returns TaskBundleScene ReturnBundleAsync(Bundle) public virtual Task ReturnBundleAsync(Bundle bundle) Parameters bundle Bundle Returns Task Update() public void Update()"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.AssetBundleManagerException.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.AssetBundleManagerException.html",
    "title": "Class AssetBundleManagerException | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class AssetBundleManagerException Namespace NF.UnityLibs.Managers.AssetBundleManagement public class AssetBundleManagerException : Exception Inheritance object Exception AssetBundleManagerException Constructors AssetBundleManagerException(E_EXCEPTION_KIND, string) public AssetBundleManagerException(E_EXCEPTION_KIND kind, string msg = \"\") Parameters kind E_EXCEPTION_KIND msg string Properties ExceptionKind public E_EXCEPTION_KIND ExceptionKind { get; } Property Value E_EXCEPTION_KIND StackTrace Gets a string representation of the immediate frames on the call stack. public override string StackTrace { get; } Property Value string A string that describes the immediate frames of the call stack."
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.AssetBundleRef.E_ASSETBUNDLEREF_STATE.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.AssetBundleRef.E_ASSETBUNDLEREF_STATE.html",
    "title": "Enum AssetBundleRef.E_ASSETBUNDLEREF_STATE | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Enum AssetBundleRef.E_ASSETBUNDLEREF_STATE Namespace NF.UnityLibs.Managers.AssetBundleManagement public enum AssetBundleRef.E_ASSETBUNDLEREF_STATE Fields LOADED = 1 LOADING = 0 UNLOADED = 2"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.AssetBundleRef.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.AssetBundleRef.html",
    "title": "Class AssetBundleRef | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class AssetBundleRef Namespace NF.UnityLibs.Managers.AssetBundleManagement [Serializable] public sealed class AssetBundleRef Inheritance object AssetBundleRef Properties AssetBundleOrNull public AssetBundle? AssetBundleOrNull { get; } Property Value AssetBundle? Dependencies public string[] Dependencies { get; } Property Value string[] Name public string Name { get; } Property Value string Progress public float Progress { get; } Property Value float State public AssetBundleRef.E_ASSETBUNDLEREF_STATE State { get; } Property Value AssetBundleRef.E_ASSETBUNDLEREF_STATE UnityObjects public UnityEngine.Object[] UnityObjects { get; } Property Value Object[]"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.Bundle-1.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.Bundle-1.html",
    "title": "Class Bundle<T> | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class Bundle<T> Namespace NF.UnityLibs.Managers.AssetBundleManagement [Serializable] public sealed class Bundle<T> : Bundle where T : UnityEngine.Object Type Parameters T Inheritance object Bundle Bundle<T> Inherited Members Bundle.BundleUID Bundle.AssetBundleRef Bundle.State Bundle.Name Bundle.GetAssetOrNull<T>() Properties AssetOrNull public T? AssetOrNull { get; } Property Value T"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.Bundle.E_BUNDLE_STATE.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.Bundle.E_BUNDLE_STATE.html",
    "title": "Enum Bundle.E_BUNDLE_STATE | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Enum Bundle.E_BUNDLE_STATE Namespace NF.UnityLibs.Managers.AssetBundleManagement public enum Bundle.E_BUNDLE_STATE Fields RENTED = 0 RETURNED = 2 RETURNING = 1"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.Bundle.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.Bundle.html",
    "title": "Class Bundle | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class Bundle Namespace NF.UnityLibs.Managers.AssetBundleManagement [Serializable] public class Bundle Inheritance object Bundle Derived BundleScene Bundle<T> Properties AssetBundleRef public AssetBundleRef AssetBundleRef { get; } Property Value AssetBundleRef BundleUID public uint BundleUID { get; } Property Value uint Name public string Name { get; } Property Value string State public Bundle.E_BUNDLE_STATE State { get; } Property Value Bundle.E_BUNDLE_STATE Methods GetAssetOrNull<T>() public T? GetAssetOrNull<T>() where T : UnityEngine.Object Returns T Type Parameters T"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.BundleScene.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.BundleScene.html",
    "title": "Class BundleScene | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class BundleScene Namespace NF.UnityLibs.Managers.AssetBundleManagement [Serializable] public sealed class BundleScene : Bundle Inheritance object Bundle BundleScene Inherited Members Bundle.BundleUID Bundle.AssetBundleRef Bundle.State Bundle.Name Bundle.GetAssetOrNull<T>() Properties ScenePaths public string[] ScenePaths { get; } Property Value string[]"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.E_EXCEPTION_KIND.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.E_EXCEPTION_KIND.html",
    "title": "Enum E_EXCEPTION_KIND | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Enum E_EXCEPTION_KIND Namespace NF.UnityLibs.Managers.AssetBundleManagement public enum E_EXCEPTION_KIND Fields ERR_ON_INITIALIZE = 100 NONE = 0"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.Editors.EditorAssetBundleHelper.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.Editors.EditorAssetBundleHelper.html",
    "title": "Class EditorAssetBundleHelper | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class EditorAssetBundleHelper Namespace NF.UnityLibs.Managers.AssetBundleManagement.Editors public class EditorAssetBundleHelper Inheritance object EditorAssetBundleHelper Fields ASSETBUNDLE_DIR_ASSETPATH public const string ASSETBUNDLE_DIR_ASSETPATH = \"Assets/@AssetBundle\" Field Value string MANIFEST_NAME public const string MANIFEST_NAME = \"__ASSETBUNDLE\" Field Value string OUT_BASE_DIR_NAME public const string OUT_BASE_DIR_NAME = \"__ASSETBUNDLE\" Field Value string Methods BuildVersion0() public static void BuildVersion0() BuildVersion0_OpenDirectory() public static void BuildVersion0_OpenDirectory() GetAssetBundleNameFromAssetPath(string, string) public static string GetAssetBundleNameFromAssetPath(string inAssetBundleDirAssetPath, string assetPath) Parameters inAssetBundleDirAssetPath string assetPath string Returns string TaggingAssetName() public static void TaggingAssetName()"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.Editors.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.Editors.html",
    "title": "Namespace NF.UnityLibs.Managers.AssetBundleManagement.Editors | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Namespace NF.UnityLibs.Managers.AssetBundleManagement.Editors Classes EditorAssetBundleHelper"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.TaskBundle-1.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.TaskBundle-1.html",
    "title": "Class TaskBundle<T> | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class TaskBundle<T> Namespace NF.UnityLibs.Managers.AssetBundleManagement public class TaskBundle<T> where T : UnityEngine.Object Type Parameters T Inheritance object TaskBundle<T> Properties IsCompleted public bool IsCompleted { get; } Property Value bool Progress public float Progress { get; } Property Value float Methods GetAwaiter() public TaskAwaiter<Bundle<T>> GetAwaiter() Returns TaskAwaiter<Bundle<T>>"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.TaskBundleScene.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.TaskBundleScene.html",
    "title": "Class TaskBundleScene | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Class TaskBundleScene Namespace NF.UnityLibs.Managers.AssetBundleManagement public class TaskBundleScene Inheritance object TaskBundleScene Properties IsCompleted public bool IsCompleted { get; } Property Value bool Progress public float Progress { get; } Property Value float Methods GetAwaiter() public TaskAwaiter<BundleScene> GetAwaiter() Returns TaskAwaiter<BundleScene>"
  },
  "api/NF.UnityLibs.Managers.AssetBundleManagement.html": {
    "href": "api/NF.UnityLibs.Managers.AssetBundleManagement.html",
    "title": "Namespace NF.UnityLibs.Managers.AssetBundleManagement | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Namespace NF.UnityLibs.Managers.AssetBundleManagement Classes AssetBundleManager AssetBundleManagerException AssetBundleRef Bundle BundleScene Bundle<T> TaskBundleScene TaskBundle<T> Enums AssetBundleRef.E_ASSETBUNDLEREF_STATE Bundle.E_BUNDLE_STATE E_EXCEPTION_KIND"
  },
  "docs/index.html": {
    "href": "docs/index.html",
    "title": "Introduction | nf.unitylibs.managers.assetbundlemanagement",
    "summary": "Introduction repo upm https://docs.unity3d.com/Manual/upm-ui-giturl.html https://github.com/netpyoung/nf.unitylibs.managers.assetbundlemanagement.git?path=LocalPackage Example [SerializeField] AssetBundleManager _bundle = new AssetBundleManager(); async void Start() { string deviceBaseDirFpath = AssetBundleManager_ForEditorBuild0.GetDeviceBaseDirFpath_ForEditorBuild0(); string manifestName = AssetBundleManager_ForEditorBuild0.MANIFEST_NAME; Exception? exOrNull = await _bundle.InitAsync(deviceBaseDirFpath, manifestName); if (exOrNull is Exception ex) { Debug.LogException(ex); return; } TaskBundle<GameObject> task = _bundle.RentBundleOrNull<GameObject>(\"cube\")!; while (!task.IsCompleted) { await Task.Yield(); } Bundle<GameObject> bundle = await task; Instantiate(bundle.AssetOrNull, Vector3.zero, Quaternion.identity); await Task.Delay(3000); await _bundle.ReturnBundleAsync(bundle); } private void Update() { _bundle.Update(); } private void OnDestroy() { _bundle.Dispose(); }"
  },
  "index.html": {
    "href": "index.html",
    "title": "",
    "summary": ""
  }
}